[package]
name = "lnpbp"
version = "0.5.0-alpha"
license = "MIT"
authors = ["Dr. Maxim Orlovsky <orlovsky@pandoracore.com>"]
description = "LNP/BP Core Library implementing LNPBP specifications & standards"
repository = "https://github.com/LNP-BP/rust-lnpbp"
homepage = "https://github.com/LNP-BP"
keywords = ["bitcoin", "lightning", "lnp-bp", "layer-3", "cryptography"]
categories = ["cryptography::cryptocurrencies"]
readme = "README.md"
edition = "2018"
exclude = [".github", "contrib"]

[lib]
name = "lnpbp"
path = "src/lib.rs"
crate-type = ["rlib", "staticlib"]

[[bin]]
name = "lnpbp"
path = "src/bin/lnpbp.rs"
required-features = ["cli"]

# Dependencies
# ============
#
# Version policy
# --------------
# The policy in specifying dependencies versions are to use tilde requirements
# according to
# <https://doc.rust-lang.org/nightly/cargo/reference/specifying-dependencies.html?highlight=feature#tilde-requirements>
# with full semver version specification (major, minor and patch components)
# which means that we may upgrade for patches/bugfixes, but must not change
# even the minor version of the package.
# Once the library is stable consider upgrading tilde requirements to strict
# equivalence requirements (with '=' sign) since even dependencies patching will
# not introduce risk of breaking the consensus and even security updates must
# be done manually after through testing
[dependencies]
# Dependencies on other LNP/BP repositories
# -----------------------------------------
amplify = { version = "3", features = ["stringly_conversions", "std"] }
# Dependencies on core rust-bitcoin ecosystem projects
# ----------------------------------------------------
bitcoin_hashes = "~0.10.0"
lnpbp_bech32 = { version = "0.5.0-alpha.1", path = "bech32" }
# Serialization
# -------------
# This strange naming is a workaround for cargo inability to define required
# features for a dependency. See
# <https://github.com/rust-lang/api-guidelines/issues/180> for the explanation
# and references.
serde_crate = { package = "serde", version = "~1.0.0", features = ["derive"], optional = true }
serde_with = { version = "~1.5.0", features = ["hex"], optional = true }
serde_with_macros = { version = "~1.2.0", optional = true } # Fix for the problem in 1.3.0
# Optional features used only by a binary
# ---------------------------------------
clap = { version = "3.0.0-beta.2", optional = true }
serde_yaml = { version = "0.8", optional = true }
serde_json = { version = "1", optional = true }
base64-compat = { version = "1", optional = true } # Used by cli only
base58 = { version = "0.1", optional = true } # Used by cli only

# Features
# ========
[features]
default = ["zip"]
all = ["serde", "elgamal", "zip", "cli"]
cli = ["clap", "serde", "base64-compat", "base58", "serde_yaml", "serde_json"]
serde = ["serde_crate", "serde_with", "serde_with_macros", "amplify/serde",
         "lnpbp_bech32/serde",
         "bitcoin_hashes/serde"]
elgamal = [] # Provides ElGamal encryption module from this library
zip = ["lnpbp_bech32/zip"]
